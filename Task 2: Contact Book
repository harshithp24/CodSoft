
import json
import os

CONTACTS_FILE = 'contacts.json'

def load_contacts():
    """Load contacts from the JSON file."""
    if os.path.exists(CONTACTS_FILE):
        with open(CONTACTS_FILE, 'r') as file:
            return json.load(file)
    return []

def save_contacts(contacts):
    """Save contacts to the JSON file."""
    with open(CONTACTS_FILE, 'w') as file:
        json.dump(contacts, file, indent=4)

def add_contact(contacts):
    """Add a new contact."""
    name = input("Enter contact name: ")
    phone = input("Enter contact phone number: ")
    email = input("Enter contact email: ")
    address = input("Enter contact address: ")
    contact = {
        "name": name,
        "phone": phone,
        "email": email,
        "address": address
    }
    contacts.append(contact)
    save_contacts(contacts)
    print("Contact added successfully.")

def view_contacts(contacts):
    """View all contacts."""
    if not contacts:
        print("No contacts found.")
        return
    for i, contact in enumerate(contacts, start=1):
        print(f"{i}. Name: {contact['name']}, Phone: {contact['phone']}")

def search_contacts(contacts):
    """Search for contacts by name or phone number."""
    search_term = input("Enter name or phone number to search: ").lower()
    results = [contact for contact in contacts if search_term in contact['name'].lower() or search_term in contact['phone']]
    if not results:
        print("No contacts found.")
        return
    for contact in results:
        print(f"Name: {contact['name']}, Phone: {contact['phone']}, Email: {contact['email']}, Address: {contact['address']}")

def update_contact(contacts):
    """Update an existing contact."""
    search_term = input("Enter name or phone number of the contact to update: ").lower()
    contact = next((c for c in contacts if search_term in c['name'].lower() or search_term in c['phone']), None)
    if contact:
        print("Updating contact...")
        contact['name'] = input(f"New name (leave empty to keep '{contact['name']}'): ") or contact['name']
        contact['phone'] = input(f"New phone (leave empty to keep '{contact['phone']}'): ") or contact['phone']
        contact['email'] = input(f"New email (leave empty to keep '{contact['email']}'): ") or contact['email']
        contact['address'] = input(f"New address (leave empty to keep '{contact['address']}'): ") or contact['address']
        save_contacts(contacts)
        print("Contact updated successfully.")
    else:
        print("Contact not found.")

def delete_contact(contacts):
    """Delete a contact."""
    search_term = input("Enter name or phone number of the contact to delete: ").lower()
    contact = next((c for c in contacts if search_term in c['name'].lower() or search_term in c['phone']), None)
    if contact:
        contacts.remove(contact)
        save_contacts(contacts)
        print("Contact deleted successfully.")
    else:
        print("Contact not found.")

def display_menu():
    """Display the main menu."""
    print("\nContact Management System")
    print("1. Add Contact")
    print("2. View Contacts")
    print("3. Search Contacts")
    print("4. Update Contact")
    print("5. Delete Contact")
    print("6. Exit")

def main():
    """Main function to run the contact management system."""
    contacts = load_contacts()
    
    while True:
        display_menu()
        choice = input("Enter your choice (1-6): ")
        
        if choice == '1':
            add_contact(contacts)
        elif choice == '2':
            view_contacts(contacts)
        elif choice == '3':
            search_contacts(contacts)
        elif choice == '4':
            update_contact(contacts)
        elif choice == '5':
            delete_contact(contacts)
        elif choice == '6':
            print("Exiting...")
            break
        else:
            print("Invalid choice, please try again.")

if __name__ == "__main__":
    main()

